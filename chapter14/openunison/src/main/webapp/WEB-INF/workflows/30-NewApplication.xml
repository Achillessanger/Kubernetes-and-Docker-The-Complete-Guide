<workflow  name="NewApplication" label="New Application" description="Creates a new kubernetes namespace and associated groups to manage approvals" inList="false" orgid="B158BD40-0C1B-11E3-8FFD-0800200C9A66">
    <dynamicConfiguration dynamic="false" />
    <tasks>
        <customTask className="com.tremolosecurity.provisioning.customTasks.CopyFromUserToRequest">
            <param name="attribute" value="nameSpace"/>
            <param name="keepInUser" value="false"/>
        </customTask>
        <customTask className="com.tremolosecurity.provisioning.customTasks.LoadAttributes">
            <param name="nameAttr" value="uid"/>
            <param name="name" value="givenname"/>
            <param name="name" value="sn"/>
            <param name="name" value="mail"/>
        </customTask>
        <approval label="Create New Application - $nameSpace$">
            <onSuccess>
                <customTask className="com.tremolosecurity.provisioning.customTasks.AddGroupToStore">
                    <param name="target" value="jitdb"/>
                    <param name="name" value="approvers-k8s-$nameSpace$"/>
                    <param name="attributes" value="unison.group.create.sql=INSERT INTO localGroups (name,description) VALUES (?,?)"/>
                    <param name="attributes" value="unison.group.create.param.2=Approve access to $nameSpace$" />
                </customTask>
                <customTask className="com.tremolosecurity.provisioning.customTasks.AddGroupToStore">
                    <param name="target" value="jitdb"/>
                    <param name="name" value="k8s-namespace-operations-$nameSpace$"/>
                    <param name="attributes" value="unison.group.create.sql=INSERT INTO localGroups (name,description) VALUES (?,?)"/>
                    <param name="attributes" value="unison.group.create.param.2=Manage kubernetes namespace $nameSpace$" />
                </customTask>
                <customTask className="com.tremolosecurity.provisioning.customTasks.AddGroupToStore">
                    <param name="target" value="jitdb"/>
                    <param name="name" value="k8s-namespace-developer-$nameSpace$"/>
                    <param name="attributes" value="unison.group.create.sql=INSERT INTO localGroups (name,description) VALUES (?,?)"/>
                    <param name="attributes" value="unison.group.create.param.2=View kubernetes namespace $nameSpace$" />
                </customTask>

              <customTask className="com.tremolosecurity.provisioning.customTasks.AddGroupToStore">
                  <param name="target" value="gitlab"/>
                  <param name="name" value="approvers-k8s-$nameSpace$"/>
                  <param name="attributes" value="requestAccessEnabled=false"/>
                  
              </customTask>
              <customTask className="com.tremolosecurity.provisioning.customTasks.AddGroupToStore">
                  <param name="target" value="gitlab"/>
                  <param name="name" value="k8s-namespace-operations-$nameSpace$"/>
                  <param name="attributes" value="requestAccessEnabled=false"/>
                  
              </customTask>
              <customTask className="com.tremolosecurity.provisioning.customTasks.AddGroupToStore">
                  <param name="target" value="gitlab"/>
                  <param name="name" value="k8s-namespace-developer-$nameSpace$"/>
                  <param name="attributes" value="requestAccessEnabled=false"/>
              </customTask>

              <customTask className="com.tremolosecurity.unison.gitlab.provisioning.tasks.CreateProject">
                <param name="namespace" value="#[GITLAB_NAMESPACE]"/>
                <param name="name" value="$nameSpace$"/>
                <param name="description" value="Application project"/>
                <param name="issuesEnabled" value="true"/>
                <param name="mergeRequestsEnabled" value="true"/>
                <param name="wikiEnabled" value="true"/>
                <param name="snipitsEnabled" value="true"/>
                <param name="visibility" value="2"/>
                <param name="targetName" value="gitlab"/>
                
            </customTask>

            <customTask className="com.tremolosecurity.unison.gitlab.provisioning.tasks.AddGroupToProject">
              <param name="groupName" value="approvers-k8s-$nameSpace$"/>
              <param name="targetName" value="gitlab"/>
              <param name="accessLevel" value="MAINTAINER" />
              
          </customTask>
          <customTask className="com.tremolosecurity.unison.gitlab.provisioning.tasks.AddGroupToProject">
            <param name="groupName" value="k8s-namespace-operations-$nameSpace$"/>
            <param name="targetName" value="gitlab"/>
            <param name="accessLevel" value="DEVELOPER" />
            
        </customTask>
        <customTask className="com.tremolosecurity.unison.gitlab.provisioning.tasks.AddGroupToProject">
          <param name="groupName" value="k8s-namespace-developer-$nameSpace$"/>
          <param name="targetName" value="gitlab"/>
          <param name="accessLevel" value="DEVELOPER" />
          
      </customTask>

          

                <mapping strict="true">
                    <onSuccess>
                        <addGroup name="approvers-k8s-$nameSpace$" remove="false"/>
                        <addGroup name="k8s-namespace-operations-$nameSpace$" remove="false"/>
                        <provision sync="false" target="jitdb" setPassword="false" onlyPassedInAttributes="false">
                            <attributes>
                              <value>uid</value>
                            </attributes>
                        </provision>
                    </onSuccess>
                    <onFailure/>
                    <map>
                        <mapping targetAttributeName="uid" targetAttributeSource="uid" sourceType="user"/>
                    </map>
                </mapping>
<!-- Create Dev Namespace -->
                <customTask className="com.tremolosecurity.provisioning.tasks.CreateK8sObject">
                    <param name="targetName" value="k8s"/>
                    <param name="template" >
<![CDATA[ 
{
    "kind": "Namespace",
    "apiVersion": "v1",
    "metadata": {
      "name": "$nameSpace$-dev",
      "labels": {
        "name": "$nameSpace$-dev",
        "type": "application",
        "env": "dev"
      }
    }
  }
]]> 
                    </param>
                    <param name="kind" value="Namespace" />
                    <param name="url" value="/api/v1/namespaces" />
                </customTask>



                <customTask className="com.tremolosecurity.provisioning.tasks.CreateK8sObject">
                    <param name="targetName" value="k8s"/>
                    <param name="template" >
<![CDATA[ 
                        {
                            "kind": "RoleBinding",
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "metadata": {
                              "name": "operations-binding",
                              "namespace": "$nameSpace$-dev"
                            },
                            "subjects": [
                              {
                                "kind": "Group",
                                "name": "k8s-namespace-operations-$nameSpace$",
                                "apiGroup": "rbac.authorization.k8s.io"
                              },
                              {
                                "kind": "Group",
                                "name": "k8s-namespace-developer-$nameSpace$",
                                "apiGroup": "rbac.authorization.k8s.io"
                              }
                            ],
                            "roleRef": {
                              "kind": "ClusterRole",
                              "name": "admin",
                              "apiGroup": "rbac.authorization.k8s.io"
                            }
                          }
                          ]]>                        
                        </param>
                    <param name="kind" value="RoleBinding" />
                    <param name="url" value="/apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$-dev/rolebindings" />
                </customTask>

<!-- Create production namespace -->
<customTask className="com.tremolosecurity.provisioning.tasks.CreateK8sObject">
  <param name="targetName" value="k8s"/>
  <param name="template" >
<![CDATA[ 
{
"kind": "Namespace",
"apiVersion": "v1",
"metadata": {
"name": "$nameSpace$-prod",
"labels": {
"name": "$nameSpace$-prod",
"application":"$nameSpace$",
"type": "application",
"env": "prod"
}
}
}
]]> 
  </param>
  <param name="kind" value="Namespace" />
  <param name="url" value="/api/v1/namespaces" />
</customTask>



<customTask className="com.tremolosecurity.provisioning.tasks.CreateK8sObject">
  <param name="targetName" value="k8s"/>
  <param name="template" >
<![CDATA[ 
      {
          "kind": "RoleBinding",
          "apiVersion": "rbac.authorization.k8s.io/v1",
          "metadata": {
            "name": "operations-binding",
            "namespace": "$nameSpace$-prod"
          },
          "subjects": [
            {
              "kind": "Group",
              "name": "k8s-namespace-operations-$nameSpace$",
              "apiGroup": "rbac.authorization.k8s.io"
            }
          ],
          "roleRef": {
            "kind": "ClusterRole",
            "name": "admin",
            "apiGroup": "rbac.authorization.k8s.io"
          }
        }
        ]]>                        
      </param>
  <param name="kind" value="RoleBinding" />
  <param name="url" value="/apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$-prod/rolebindings" />
</customTask>


                <customTask className="com.tremolosecurity.provisioning.tasks.CreateK8sObject">
                    <param name="targetName" value="k8s"/>
                    <param name="template" >
<![CDATA[ 
                        {
                            "kind": "RoleBinding",
                            "apiVersion": "rbac.authorization.k8s.io/v1",
                            "metadata": {
                              "name": "developers-binding",
                              "namespace": "$nameSpace$-prod"
                            },
                            "subjects": [
                              {
                                "kind": "Group",
                                "name": "k8s-namespace-developer-$nameSpace$",
                                "apiGroup": "rbac.authorization.k8s.io"
                              }
                            ],
                            "roleRef": {
                              "kind": "ClusterRole",
                              "name": "view",
                              "apiGroup": "rbac.authorization.k8s.io"
                            }
                          }
                          ]]>
                    </param>
                    <param name="kind" value="RoleBinding" />
                    <param name="url" value="/apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$-prod/rolebindings" />
                </customTask>

                <notifyUser subject="Application created" mailAttrib="mail">
                    <msg>Your application has been created</msg>
                </notifyUser>
            </onSuccess>
            <onFailure/>
            <emailTemplate>A new application has been requested</emailTemplate>
            <approvers>
                <rule scope="group" constraint="cn=administrators,ou=groups,ou=shadow,o=Tremolo"/>
            </approvers>
            <mailAttr>mail</mailAttr>
            <failureEmailSubject>Project not approved</failureEmailSubject>
            <failureEmailMsg>Because:&#xD;
&#xD;
${reason}</failureEmailMsg>
            <escalationPolicy>
                <escalationFailure action="leave">
                    <azRules/>
                </escalationFailure>
            </escalationPolicy>
        </approval>
    </tasks>
</workflow>
